# -*- coding: utf-8 -*-
import numpy as np
import sys
import matplotlib.pyplot as plt
"""
Created on Wed Feb 06 12:18:15 2019

@author: sxd170431
"""
"""This code plots a graph of the statistics that has been generated by FVI"""

def diff(l1,l2):
    l1 = list(l1)
    l2 =list(l2)
    N = len(l1)
    d = [(l1[i] - l2[i]) for i in range(N)]
    return np.array(d)

path="C:/Users/sxd170431/Desktop/Work/Projects/Relational_RL/Results/"
gpath="C:/Users/sxd170431/Desktop/Work/Projects/Relational_RL/Plots/"
simulator="logistics"
runs=5
policy=0.9
trees=3
loss="LS"

bellman_error_file="avg_bellman_error.txt"
test_error_all_file="avg_test_error.txt"
avg_inf_val_file="avg_inf_val.txt"
avg_true_val_file="avg_true_val.txt"
test_error_all_start_file="avg_test_error_start.txt"
avg_inf_val_start_file="avg_inf_val_start.txt"
avg_true_val_start_file="avg_true_val_start.txt"


alg_LS_path=path+simulator+"//Runs_"+str(runs)+"//Policy_"+str(policy)+"//trees_"+str(trees)+"//"+"LS"+"//"
alg_LAD_path=path+simulator+"//Runs_"+str(runs)+"//Policy_"+str(policy)+"//trees_"+str(trees)+"//"+"LAD"+"//"
alg_Huber_path=path+simulator+"//Runs_"+str(runs)+"//Policy_"+str(policy)+"//trees_"+str(trees)+"//"+"Huber"+"//"
alg_baseline_path=path+simulator+"//Runs_"+str(runs)+"//Policy_"+str(policy)+"//trees_"+str(1)+"//"+"LS"+"//"

bellman_error_FVI_LS=np.genfromtxt(alg_LS_path+bellman_error_file)
bellman_error_FVI_LAD=np.genfromtxt(alg_LAD_path+bellman_error_file)
bellman_error_FVI_Huber=np.genfromtxt(alg_Huber_path+bellman_error_file)
bellman_error_FVI_baseline=np.genfromtxt(alg_baseline_path+bellman_error_file)

true_val_FVI_LS=np.genfromtxt(alg_LS_path+avg_true_val_file)
true_val_FVI_LAD=np.genfromtxt(alg_LAD_path+avg_true_val_file)
true_val_FVI_Huber=np.genfromtxt(alg_Huber_path+avg_true_val_file)
true_val_FVI_baseline=np.genfromtxt(alg_baseline_path+avg_true_val_file)

inf_val_FVI_LS=np.genfromtxt(alg_LS_path+avg_inf_val_file)
inf_val_FVI_LAD=np.genfromtxt(alg_LAD_path+avg_inf_val_file)
inf_val_FVI_Huber=np.genfromtxt(alg_Huber_path+avg_inf_val_file)
inf_val_FVI_baseline=np.genfromtxt(alg_baseline_path+avg_inf_val_file)

true_val_FVI_LS_start=np.genfromtxt(alg_LS_path+avg_true_val_start_file)
true_val_FVI_LAD_start=np.genfromtxt(alg_LAD_path+avg_true_val_start_file)
true_val_FVI_Huber_start=np.genfromtxt(alg_Huber_path+avg_true_val_start_file)
true_val_FVI_baseline_start=np.genfromtxt(alg_baseline_path+avg_true_val_start_file)

inf_val_FVI_LS_start=np.genfromtxt(alg_LS_path+avg_inf_val_start_file)
inf_val_FVI_LAD_start=np.genfromtxt(alg_LAD_path+avg_inf_val_start_file)
inf_val_FVI_Huber_start=np.genfromtxt(alg_Huber_path+avg_inf_val_start_file)
inf_val_FVI_baseline_start=np.genfromtxt(alg_baseline_path+avg_inf_val_start_file)

print bellman_error_FVI_LS.shape,bellman_error_FVI_LAD.shape,bellman_error_FVI_Huber.shape,bellman_error_FVI_baseline.shape
"""Plot the average bellman error"""
itertn=range(0,bellman_error_FVI_baseline.shape[0])
dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,diff(bellman_error_FVI_LS,bellman_error_FVI_Huber),color='b',label='Huber-LS')
plt.plot(itertn,diff(bellman_error_FVI_LAD,bellman_error_FVI_Huber),color='r',label='Huber-LAD')
plt.plot(itertn,diff(bellman_error_FVI_baseline,bellman_error_FVI_Huber),color='g',label='Huber-baseline')
plt.plot(itertn,dummy,color='black',linewidth=0.5,linestyle='--')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('No of value iteration')
plt.ylabel('Avg Bellman residual')
plt.legend()
plt.savefig(gpath+'Avg_bellman_residual.png', bbox_inches='tight')
plt.clf()
"""*****************************************************************************************************"""

"""Plot the true and the inferred value of the Test trajectories for FVI-LS"""
itertn=range(0,true_val_FVI_LS.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_LS,color='b',label='True-Q(s,a)')
plt.plot(itertn,inf_val_FVI_LS,color='r',label='Inf-Q(s,a)')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'Truus_vs_Inf_test_LS.png', bbox_inches='tight')
plt.clf()

"""Plot the true and the inferred value of the Test trajectories for FVI-LAD"""

itertn=range(0,true_val_FVI_LAD.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_LAD,color='b',label='True-Q(s,a)')
plt.plot(itertn,inf_val_FVI_LAD,color='r',label='Inf-Q(s,a)')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'Truus_vs_Inf_test_LAD.png', bbox_inches='tight')
plt.clf()

"""Plot the true and the inferred value of the Test trajectories for FVI-Huber"""

itertn=range(0,true_val_FVI_Huber.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_Huber,color='b',label='True-Q(s,a)')
plt.plot(itertn,inf_val_FVI_Huber,color='r',label='Inf-Q(s,a)')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'Truus_vs_Inf_test_Huber.png', bbox_inches='tight')
plt.clf()

"""Plot the true and the inferred value of the Test trajectories for Baseline-LS"""
itertn=range(0,true_val_FVI_baseline.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_baseline,color='b',label='True-Q(s,a)')
plt.plot(itertn,inf_val_FVI_baseline,color='r',label='Inf-Q(s,a)')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'True_vs_Inf_test_baseline.png', bbox_inches='tight')
plt.clf()

"""*****************************************************************************************************"""
"""Plot the true and the inferred value of the starting (s,a) pair of each test trajectory"""

"""Plot the true and the inferred value of the Test trajectories for FVI-LS"""
itertn=range(0,true_val_FVI_LS_start.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_LS_start,color='b',label='True-Q(s,a)-start')
plt.plot(itertn,inf_val_FVI_LS_start,color='r',label='Inf-Q(s,a)-start')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'Truus_vs_Inf_test_LS_start.png', bbox_inches='tight')
plt.clf()

"""Plot the true and the inferred value of the Test trajectories for FVI-LAD"""

itertn=range(0,true_val_FVI_LAD_start.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_LAD_start,color='b',label='True-Q(s,a)-start')
plt.plot(itertn,inf_val_FVI_LAD_start,color='r',label='Inf-Q(s,a)-start')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'Truus_vs_Inf_test_LAD_start.png', bbox_inches='tight')
plt.clf()

"""Plot the true and the inferred value of the Test trajectories for FVI-Huber"""

itertn=range(0,true_val_FVI_Huber_start.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_Huber_start,color='b',label='True-Q(s,a)-start')
plt.plot(itertn,inf_val_FVI_Huber_start,color='r',label='Inf-Q(s,a)-start')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'Truus_vs_Inf_test_Huber_start.png', bbox_inches='tight')
plt.clf()

"""Plot the true and the inferred value of the Test trajectories for Baseline-LS"""
itertn=range(0,true_val_FVI_baseline_start.shape[0])
#dummy=np.zeros(bellman_error_FVI_baseline.shape[0])
"""Blue color is for suggested algorithm accuracy"""
plt.plot(itertn,true_val_FVI_baseline_start,color='b',label='True-Q(s,a)-start')
plt.plot(itertn,inf_val_FVI_baseline_start,color='r',label='Inf-Q(s,a)-start')

#plt.xlim(0,itertn)
#plt.ylim(0.5,1)
plt.xlabel('Test-trajectories')
plt.ylabel(' Avg Q-values')
plt.legend()
plt.savefig(gpath+'True_vs_Inf_test_baseline_start.png', bbox_inches='tight')
plt.clf()
